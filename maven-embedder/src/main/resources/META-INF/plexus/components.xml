<component-set>
  <components>
    <component>
      <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>
      <role-hint>default</role-hint>
      <implementation>org.apache.maven.artifact.repository.layout.DefaultRepositoryLayout</implementation>
    </component>

    <component>
      <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>
      <role-hint>legacy</role-hint>
      <implementation>org.apache.maven.artifact.repository.layout.LegacyRepositoryLayout</implementation>
    </component>

    <!--
     |
     | ArtifactHandlerManager
     |
     -->
    <component>
      <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
      <implementation>org.apache.maven.artifact.handler.manager.DefaultArtifactHandlerManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
          <field-name>artifactHandlers</field-name>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>ejb</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>ejb</type>
        <extension>jar</extension>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>jar</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>jar</type>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>maven-plugin</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>maven-plugin</type>
        <extension>jar</extension>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>pom</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>pom</type>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>java-source</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>java-source</type>
        <extension>jar</extension>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>war</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>war</type>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.handler.ArtifactHandler</role>
      <role-hint>ejb-client</role-hint>
      <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler</implementation>
      <configuration>
        <type>ejb-client</type>
        <extension>jar</extension>
        <packaging>ejb</packaging>
        <classifier>client</classifier>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
      <implementation>org.apache.maven.artifact.factory.DefaultArtifactFactory</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>
      <implementation>org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory</implementation>
    </component>

    <component>
      <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
      <implementation>org.apache.maven.artifact.resolver.DefaultArtifactCollector</implementation>
    </component>

    <component>
      <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
      <!--
      <role-hint>default</role-hint>
      -->
      <implementation>org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
      </requirements>
    </component>

    <!--
     |
     | WagonManager
     |
     -->
    <component>
      <role>org.apache.maven.artifact.manager.WagonManager</role>
      <implementation>org.apache.maven.artifact.manager.DefaultWagonManager</implementation>
    </component>

    <!--
     |
     | Transformations
     |
     -->
    <component>
      <role>org.apache.maven.artifact.transform.ArtifactTransformation</role>
      <role-hint>snapshot</role-hint>
      <implementation>org.apache.maven.artifact.transform.SnapshotTransformation</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.transform.ArtifactTransformation</role>
      <role-hint>release</role-hint>
      <implementation>org.apache.maven.artifact.transform.ReleaseArtifactTransformation</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.transform.ArtifactTransformation</role>
      <role-hint>latest</role-hint>
      <implementation>org.apache.maven.artifact.transform.LatestArtifactTransformation</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <!--
     |
     | ArtifactTransformationManager
     |
     -->
    <component>
      <role>org.apache.maven.artifact.transform.ArtifactTransformationManager</role>
      <implementation>org.apache.maven.artifact.transform.DefaultArtifactTransformationManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.transform.ArtifactTransformation</role>
          <field-name>artifactTransformations</field-name>
        </requirement>
      </requirements>
    </component>

    <!--
     |
     | Resolver
     |
     -->
    <component>
      <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
      <implementation>org.apache.maven.artifact.resolver.DefaultArtifactResolver</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.transform.ArtifactTransformationManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
        </requirement>
      </requirements>
    </component>

    <!--
     |
     | ArtifactInstaller
     |
     -->
    <component>
      <role>org.apache.maven.artifact.installer.ArtifactInstaller</role>
      <implementation>org.apache.maven.artifact.installer.DefaultArtifactInstaller</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.transform.ArtifactTransformationManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <!--
     |
     | ArtifactDeployer
     |
     -->
    <component>
      <role>org.apache.maven.artifact.deployer.ArtifactDeployer</role>
      <implementation>org.apache.maven.artifact.deployer.DefaultArtifactDeployer</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.transform.ArtifactTransformationManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>
      <implementation>org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory</implementation>
    </component>

    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.profiles.MavenProfilesBuilder</role>
      <implementation>org.apache.maven.profiles.DefaultMavenProfilesBuilder</implementation>
    </component>

    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.MavenProjectHelper</role>
      <implementation>org.apache.maven.project.DefaultMavenProjectHelper</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
      </requirements>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.interpolation.ModelInterpolator</role>
      <implementation>org.apache.maven.project.interpolation.RegexBasedModelInterpolator</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>
      <implementation>org.apache.maven.project.injection.DefaultModelDefaultsInjector</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.injection.ProfileInjector</role>
      <implementation>org.apache.maven.project.injection.DefaultProfileInjector</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.MavenProjectBuilder</role>
      <implementation>org.apache.maven.project.DefaultMavenProjectBuilder</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.transform.ArtifactTransformationManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.profiles.MavenProfilesBuilder</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.injection.ProfileInjector</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.interpolation.ModelInterpolator</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.inheritance.ModelInheritanceAssembler</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.validation.ModelValidator</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.path.PathTranslator</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.manager.WagonManager</role>
        </requirement>                
      </requirements>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.profiles.activation.ProfileActivator</role>
      <role-hint>always-on</role-hint>
      <implementation>org.apache.maven.profiles.activation.AlwaysOnProfileActivator</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.profiles.activation.ProfileActivator</role>
      <role-hint>jdk-prefix</role-hint>
      <implementation>org.apache.maven.profiles.activation.JdkPrefixProfileActivator</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.profiles.activation.ProfileActivator</role>
      <role-hint>system-property</role-hint>
      <implementation>org.apache.maven.profiles.activation.SystemPropertyProfileActivator</implementation>
    </component>
    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.inheritance.ModelInheritanceAssembler</role>
      <implementation>org.apache.maven.project.inheritance.DefaultModelInheritanceAssembler</implementation>
    </component>

    <!--
    |
    |
    |
    -->
    <component>
      <role>org.apache.maven.project.validation.ModelValidator</role>
      <implementation>org.apache.maven.project.validation.DefaultModelValidator</implementation>
    </component>

    <!-- ********************* FIXME *******************************************
    | I realize this is duplicated but allows the project builder to work by itself
    -->
    <component>
      <role>org.apache.maven.project.path.PathTranslator</role>
      <implementation>org.apache.maven.project.path.DefaultPathTranslator</implementation>
    </component>

    <component>
      <role>org.apache.maven.project.ModelResolver</role>
      <role-hint>default</role-hint>
      <implementation>org.apache.maven.project.ModelResolver</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
      <role-hint>maven</role-hint>
      <implementation>org.apache.maven.project.artifact.MavenMetadataSource</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.settings.MavenSettingsBuilder</role>
      <implementation>org.apache.maven.settings.DefaultMavenSettingsBuilder</implementation>
      <configuration>
        <globalSettingsPath>${maven.home}/conf/settings.xml</globalSettingsPath>
        <userSettingsPath>${user.home}/.m2/settings.xml</userSettingsPath>
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.wagon.Wagon</role>
      <role-hint>file</role-hint>
      <implementation>org.apache.maven.wagon.providers.file.FileWagon</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>

    <component>
      <role>org.apache.maven.wagon.Wagon</role>
      <role-hint>http</role-hint>
      <implementation>org.apache.maven.wagon.providers.http.LightweightHttpWagon</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>
  
  <!-- Maven Core -->

    <component>
      <role>org.apache.maven.plugin.PluginManager</role>
      <implementation>org.apache.maven.plugin.DefaultPluginManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.path.PathTranslator</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.plugin.MavenPluginCollector</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.plugin.version.PluginVersionManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.plugin.PluginMappingManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.execution.RuntimeInformation</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.extension.ExtensionManager</role>
      <implementation>org.apache.maven.extension.DefaultExtensionManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.plugin.PluginMappingManager</role>
      <implementation>org.apache.maven.plugin.DefaultPluginMappingManager</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager</role>
        </requirement>
      </requirements>
    </component>

    <!-- Duplicated from Maven core as it is used in the plugin manager -->
    <component>
      <role>org.apache.maven.project.path.PathTranslator</role>
      <implementation>org.apache.maven.project.path.DefaultPathTranslator</implementation>
    </component>
    <!--
     |
     |
     |
     -->
    <component>
      <role>org.apache.maven.Maven</role>
      <implementation>org.apache.maven.DefaultMaven</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.lifecycle.LifecycleExecutor</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.usability.ErrorDiagnoser</role>
          <field-name>errorDiagnosers</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.execution.RuntimeInformation</role>
        </requirement>
      </requirements>
    </component>

    <component>
      <role>org.apache.maven.execution.RuntimeInformation</role>
      <implementation>org.apache.maven.execution.DefaultRuntimeInformation</implementation>
    </component>
    <!--
    |
    |PluginConfigurationDiagnoser
    |
    -->
    <component>
      <role>org.apache.maven.usability.ErrorDiagnoser</role>
      <role-hint>PluginConfigurationDiagnoser</role-hint>
      <implementation>org.apache.maven.usability.PluginConfigurationDiagnoser</implementation>
    </component>
    <!--
     |
     |PluginContainerDiagnoser
     |
     -->
    <component>
      <role>org.apache.maven.usability.ErrorDiagnoser</role>
      <role-hint>PluginContainerDiagnoser</role-hint>
      <implementation>org.apache.maven.usability.PluginContainerDiagnoser</implementation>
    </component>
    <!--
     |
     |ArtifactResolverDiagnoser
     |
     -->
    <component>
      <role>org.apache.maven.usability.ErrorDiagnoser</role>
      <role-hint>ArtifactResolverDiagnoser</role-hint>
      <implementation>org.apache.maven.usability.ArtifactResolverDiagnoser</implementation>
    </component>
    <!--
     |
     |InvalidArtifactDiagnoser
     |
     -->
    <component>
      <role>org.apache.maven.usability.ErrorDiagnoser</role>
      <role-hint>InvalidArtifactDiagnoser</role-hint>
      <implementation>org.apache.maven.usability.InvalidArtifactDiagnoser</implementation>
    </component>

    <!--
     |
     | Lifecycle executor
     |
     -->
    <component>
      <role>org.apache.maven.lifecycle.LifecycleExecutor</role>
      <implementation>org.apache.maven.lifecycle.DefaultLifecycleExecutor</implementation>
      <requirements>
        <requirement>
          <role>org.apache.maven.plugin.PluginManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.extension.ExtensionManager</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
        </requirement>
      </requirements>
      <configuration>
        <!-- START SNIPPET: lifecyle -->
        <phases>
          <phase implementation="java.lang.String">validate</phase>
          <phase implementation="java.lang.String">initialize</phase>
          <phase implementation="java.lang.String">generate-sources</phase>
          <phase implementation="java.lang.String">process-sources</phase>
          <phase implementation="java.lang.String">generate-resources</phase>
          <phase implementation="java.lang.String">process-resources</phase>
          <phase implementation="java.lang.String">compile</phase>
          <phase implementation="java.lang.String">process-classes</phase>
          <phase implementation="java.lang.String">generate-test-sources</phase>
          <phase implementation="java.lang.String">process-test-sources</phase>
          <phase implementation="java.lang.String">generate-test-resources</phase>
          <phase implementation="java.lang.String">process-test-resources</phase>
          <phase implementation="java.lang.String">test-compile</phase>
          <phase implementation="java.lang.String">test</phase>
          <phase implementation="java.lang.String">package</phase>
          <phase implementation="java.lang.String">integration-test</phase>
          <phase implementation="java.lang.String">verify</phase>
          <phase implementation="java.lang.String">install</phase>
          <phase implementation="java.lang.String">deploy</phase>
        </phases>
        <!-- END SNIPPET: lifecycle -->
        <!-- START SNIPPET: default-reports -->
        <defaultReports>
          <report implementation="java.lang.String">org.apache.maven.plugins:maven-project-info-reports-plugin</report>
          <!-- TODO: currently in mojo - should they be defaults any more?
          <report implementation="java.lang.String">org.apache.maven.plugins:maven-checkstyle-plugin</report>
          <report implementation="java.lang.String">org.apache.maven.plugins:maven-javadoc-plugin</report>
                    <report implementation="java.lang.String">org.apache.maven.plugins:maven-changelog-plugin</report>
                    <report implementation="java.lang.String">org.apache.maven.plugins:maven-surefire-report-plugin</report>
                    <report implementation="java.lang.String">org.apache.maven.plugins:maven-jdepend-plugin</report>
                    <report implementation="java.lang.String">org.apache.maven.plugins:maven-jxr-plugin</report>
                    <report implementation="java.lang.String">org.apache.maven.plugins:maven-taglist-plugin</report>
          -->
        </defaultReports>
        <!-- END SNIPPET: default-reports -->
        <!-- START SNIPPET: default-lifecycle -->
        <!-- NOT USED, ACCORDING TO CODE.
        <defaultPhases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>
            org.apache.maven.plugins:maven-jar-plugin:jar,
            org.apache.maven.plugins:maven-source-plugin:jar
          </package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </defaultPhases>
        -->
        <!-- END SNIPPET: default-lifecycle -->
      </configuration>
    </component>

    <!-- TODO: issues with the lifecycle:
     - manually configured lifecycles will not pick up any later additions to the defaults where they are intended to extend defaults (have configuration <includeDefaults/> ?)
     -->
    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>pom</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: pom-lifecycle -->
        <phases>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: pom-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>jar</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: jar-lifecycle -->
        <phases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>
            org.apache.maven.plugins:maven-jar-plugin:jar
          </package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: jar-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>maven-plugin</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: maven-plugin-lifecycle -->
        <phases>
          <generate-resources>org.apache.maven.plugins:maven-plugin-plugin:descriptor</generate-resources>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>
            org.apache.maven.plugins:maven-jar-plugin:jar,
            org.apache.maven.plugins:maven-plugin-plugin:addPluginArtifactMetadata
          </package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: maven-plugin-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>ejb</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: ejb-lifecycle -->
        <phases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>
            org.apache.maven.plugins:maven-ejb-plugin:ejb
          </package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: ejb-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>war</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: war-lifecycle -->
        <phases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>org.apache.maven.plugins:maven-war-plugin:war</package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: war-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>ear</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: ear-lifecycle -->
        <phases>
          <generate-resources>org.apache.maven.plugins:maven-ear-plugin:generate-application-xml</generate-resources>
          <package>org.apache.maven.plugins:maven-ear-plugin:ear</package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: ear-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>rar</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <configuration>
        <!-- START SNIPPET: rar-lifecycle -->
        <phases>
          <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
          <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
          <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
          <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
          <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>
          <package>
            org.apache.maven.plugins:maven-jar-plugin:jar,
            org.apache.maven.plugins:maven-rar-plugin:rar
          </package>
          <install>org.apache.maven.plugins:maven-install-plugin:install</install>
          <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
        </phases>
        <!-- END SNIPPET: rar-lifecycle -->
      </configuration>
    </component>

    <component>
      <role>org.apache.maven.plugin.version.PluginVersionManager</role>
      <role-hint>default</role-hint>
      <implementation>org.apache.maven.plugin.version.DefaultPluginVersionManager</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.plugin.registry.MavenPluginRegistryBuilder</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.components.inputhandler.InputHandler</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
        </requirement>
        <requirement>
          <role>org.apache.maven.execution.RuntimeInformation</role>
        </requirement>
      </requirements>
    </component>
    
    <!-- Plugin registry builder -->
    
    <component>
      <role>org.apache.maven.plugin.registry.MavenPluginRegistryBuilder</role>
      <implementation>org.apache.maven.plugin.registry.DefaultPluginRegistryBuilder</implementation>
      <configuration>
        <globalRegistryPath>${maven.home}/conf/plugin-registry.xml</globalRegistryPath>
        <userRegistryPath>${user.home}/.m2/plugin-registry.xml</userRegistryPath>
      </configuration>
    </component>

    <!-- Plexus components -->
    
    <component>
      <role>org.codehaus.plexus.components.inputhandler.InputHandler</role>
      <implementation>org.codehaus.plexus.components.inputhandler.DefaultInputHandler</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
    </component>
    

  </components>
</component-set>
