 ------
 Plugin Development Guide - Executing Your First Mojo
 ------
 Bob Allison
 ------
 12 October 2005
 ------
 

Executing Your First Mojo

  The most direct means of executing your new plugin is to specify the
  plugin goal directly on the command line.  To do this, you need to
  specify a fully-qualified goal in the form of:

+----+
groupID:artifactID:version:goal
+----+

  For example, to run the simple mojo in the sample plugin, you would enter
  "<<<m2 sample.plugin:maven-hello-plugin:1.0-SNAPSHOT:sayhi>>>" on the
  command line.

Shortening the Command Line

  It is possible to shorten the amount of typing needed on the command
  line.  To do this, you need to install the plugin with the
  <<<updateReleaseInfo>>> option set to true; for example:

+----+
m2 -DupdateReleaseInfo=true install
+----+

  You also need to add your plugin's group ID to the list of group IDs
  searched by default.  To do this, you need to add the following to
  your <<<settings.xml>>> file:

+----+
<pluginGroups>
  <pluginGroup>sample.plugin</pluginGroup>
</pluginGroups>
+----+

  At this point, you can run the mojo with "<<<m2 hello:sayhi>>>".


Attaching the Mojo to the Build Lifecycle

  You can also configure your plugin to attach specific goals to a particular
  phase of the build lifecycle.  Here is an example:

+-----+
  <build>
    <plugins>
      <plugin>
        <groupId>sample.plugin</groupId>
        <artifactId>maven-hello-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>sayhi</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
+-----+

  This causes the simple mojo to be executed whenever Java code is compiled.
  For more information on binding a mojo to phases in the lifecycle, please
  refer to the {{{/maven2/lifecycle.html}Build Lifecycle}} document.