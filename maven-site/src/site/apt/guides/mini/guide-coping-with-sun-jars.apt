 ------
 Guide to Coping with Sun JARs
 ------
 Jason van Zyl
 ------
 12 October 2005
 ------

Coping with SUN JARs

 Often users are confronted with the need to build against JARs provide by
 SUN like the {{{http://java.sun.com/products/javamail/}JavaMail}} JAR, or the
 {{{http://java.sun.com/products/javabeans/glasgow/jaf.html}Activation}} JAR
 and users have found these JARs not present in central repository resulting
 in a broken build. Unfortunately most of these artifacts fall under Sun's
 Binary License which disallows us from distributing them from Ibiblio.
 
 Another problem is that Sun's appears not to have any sort of convention
 for naming their own JARs so we have taken steps in suggesting some common
 names for Sun's artifacts. You can find a list of our suggestions here:

*-------------------------------------------+-------------------+----------------+
|Product artifact                           | Group ID          | Artifact ID
*-------------------------------------------+-------------------+----------------+
| Java Activation Framework                 | javax.activation  | activation
*-------------------------------------------+-------------------+----------------+
| J2EE                                      | javax.j2ee        | j2ee
*-------------------------------------------+-------------------+----------------+
| JDO                                       | javax.jdo         | jdo
*-------------------------------------------+-------------------+----------------+
| JMS                                       | javax.jms         | jms
*-------------------------------------------+-------------------+----------------+
| JavaMail                                  | javax.mail        | mail
*-------------------------------------------+-------------------+----------------+
| EJB 3                                     | javax.persistence | ejb
*-------------------------------------------+-------------------+----------------+
| J2EE Connector Architecture               | javax.resource    | connector-api
*-------------------------------------------+-------------------+----------------+
| Java Authorization Contract for Containers| javax.security    | jacc
*-------------------------------------------+-------------------+----------------+
| Servlet                                   | javax.servlet     | servlet-api
*-------------------------------------------+-------------------+----------------+
| Servlet JSP                               | javax.servlet     | jsp-api
*-------------------------------------------+-------------------+----------------+
| Servlet JSTL                              | javax.servlet     | jstl
*-------------------------------------------+-------------------+----------------+
| JDBC 2.0 Optional Package                 | javax.sql         | jdbc-stdext
*-------------------------------------------+-------------------+----------------+
| Java Transaction API (JTA)                | javax.transaction | jta
*-------------------------------------------+-------------------+----------------+
| Java XML RPC                              | javax.xml         | jaxrpc
*-------------------------------------------+-------------------+----------------+
| Portlet                                   | javax.portlet     | portlet-api
*-------------------------------------------+-------------------+----------------+
| JNDI                                      | javax.naming      | jndi
*-------------------------------------------+-------------------+----------------+

 When you add a Sun dependency to your POM if you use the our suggestions
 as noted above then Maven 2.x can help you locate the JARs by providing
 the site where they can be retrieved. It is important that you follow
 the suggested naming conventions as we cannot store the JARs at Ibiblio we
 can store metadata about those JARs and it is the metadata that contains
 location and retrieval information.

 Once you have downloaded a particular SUN JAR to your system you can install the JAR
 in your local repository using a the install plug-in:

+----+

m2 install:install-file -Dfile=<path-to-file> -DgroupId=<group-id> \
    -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=<packaging>

+----+
