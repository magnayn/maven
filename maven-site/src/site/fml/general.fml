<?xml version="1.0"?>
<faqs title="Frequently Asked Technical Questions">
  <part id="faq">
    <faq id="scope-provided">
      <question>How do I prevent including JARs in WEB-INF/lib? I need a "compile only" scope!</question>
      <answer>
        <p>
          The scope you should use for this is
          <code>provided</code>. This indicates to Maven that the dependency will be
          provided at run time by its container or the JDK, for example.
        </p>
        <p>
          Dependencies with this scope will not be passed on transitively, nor will they be bundled in an package such
          as
          a WAR, or included in the runtime classpath.
        </p>
      </answer>
    </faq>
    <faq id="available-plugins">
      <question>How do I list available plugins?</question>
      <answer>
        <p>
          To see a list of available plugins, browse the Maven 2 plugin repository
          at
          <a href="http://www.ibiblio.org/maven2/plugins/">http://www.ibiblio.org/maven2/plugins/</a>.
          Plugins are organized according to a directory structure that resembles
          the standard Java package naming convention. To see a list of available
          plugins from the Maven project look in the
          <a href="http://www.ibiblio.org/maven2/plugins/org/apache/maven/plugins/">org/apache/maven subfolder</a>
          of this directory.
        </p>
      </answer>
    </faq>
    <faq id="using-ant-tasks">
      <question>How can I use Ant tasks in Maven 2?</question>
      <answer>
        <p>
          There are 3 alternatives:
        </p>
        <ul>
          <li>
            For use in a plugin written in Java, Beanshell or other Java-like scripting language, you can construct
            the Ant tasks using the
            <a href="http://ant.apache.org/manual/antexternal.html">instructions given in the Ant
              documentation</a>
          </li>
          <li>
            You can write your plugin using Marmalade, and use the Ant tasks much like you would from Jelly in Maven
            1.0.
          </li>
          <li>
            If you have very small amounts of Ant script specific to your project, you can use the
            <a href="http://www.neonics.com/projects/maven-antrun-plugin/">AntRun plugin</a>.
          </li>
        </ul>
      </answer>
    </faq>

    <faq id="Compiling-J2SE-5">
      <question>How do I set up Maven so it will compile with a target and source JVM of my choice?</question>
      <answer>
        <p>
          You must configure the source and target parameters in your pom. For example, to set the source and target JVM
          to 1.5, you should have in your pom :
        </p>

        <source><![CDATA[
<build>
  ...
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
    </plugin>
  </plugins>
  ...
</build>
        ]]></source>
      </answer>
    </faq>

    <faq id="dir-struct">
      <question>Is it possible to create my own directory structure?</question>
      <answer>
        <p>
          Absolutely yes!
        </p>
        <p>
          By configuring &lt;sourceDirectory&gt;, &lt;resources&gt; and other elements of
          the &lt;build&gt; section.
        </p>
        <p>
          In addition, you may need to change plugin configuration if you are
          not using plugin defaults for their files/directories.
        </p>
      </answer>
    </faq>

    <faq id="m2-source-code">
      <question>Where is the source code? I couldn't seem to find a link anywhere on the Maven2 site.</question>
      <answer>
        <p>
          The source code can be found in subversion: <a href="http://svn.apache.org/repos/asf/maven/components/trunk">http://svn.apache.org/repos/asf/maven/components/trunk</a>.
        </p>
        <p>
          For more information, see <a href="/developers/building.html">Building Maven 2.0</a>.
        </p>
      </answer>
    </faq>

    <faq id="proxy-needed">
      <question>Maven can't seem to download the dependencies. Is my installation correct?</question>
      <answer>
        <p>
          You most probably need to configure Maven to use a proxy. Please see the information on
          <a href="configuration.html">configuring settings.xml</a> for how to configure your proxy
          for Maven.
        </p>
      </answer>
    </faq>
  </part>
</faqs>
